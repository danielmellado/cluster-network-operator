# This file is automatically generated. DO NOT EDIT
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.0
    include.release.openshift.io/self-managed-high-availability: "true"
  creationTimestamp: null
  name: egressrouters.network.operator.openshift.io
spec:
  group: network.operator.openshift.io
  names:
    kind: EgressRouter
    listKind: EgressRouterList
    plural: egressrouters
    singular: egressrouter
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: EgressRouter is a single egressrouter pod configuration object.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: EgressRouterSpec contains the configuration for an egress
              router.
            properties:
              interfaceArgs:
                description: Arguments specific to the interfaceType
                properties:
                  master:
                    description: Name of the master inteface. Usually used for macvlan
                      and ipvlan. Need not be specified if it can be inferred from
                      the IP address.
                    minLength: 1
                    type: string
                  mode:
                    description: Usually used for macvlan interface.
                    minLength: 1
                    type: string
                type: object
              interfaceType:
                description: Type of interface to create/use. e.g; ipvlan, macvlan
                minLength: 1
                type: string
              ip:
                description: IP configuration arguments.
                properties:
                  addresses:
                    description: List of IP addresses to configure on the interface.
                    items:
                      description: IPAddress is the address to configure on the router's
                        interface.
                      pattern: ^(([0-9]|[0-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[0-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])$
                      type: string
                    type: array
                  destinations:
                    description: List of CIDR blocks that the pod is allowed to connect
                      to via this interface. If not provided, the pod can connect
                      to any destination.
                    items:
                      description: DestinationCIDR represents the CIDR block that
                        the pod is allowed to connect to via this interface.
                      pattern: ^(([0-9]|[0-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[0-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])/([0-9]|[12][0-9]|3[0-2])$
                      type: string
                    type: array
                  gateway:
                    description: IP address of the next-hop gateway, if it cannot
                      be automatically determined.
                    pattern: ^(([0-9]|[0-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[0-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])$
                    type: string
                required:
                - addresses
                type: object
              name:
                description: The name of the network attachment definition
                minLength: 1
                type: string
              type:
                default: egress-router
                minLength: 1
                type: string
            required:
            - ip
            - name
            - type
            type: object
          status:
            items:
              description: EgressRouterStatus contains the observed status of EgressRouter.
                Read-only.
              properties:
                egressRouter:
                  description: Name of the egress router network
                  type: string
                status:
                  description: Observed status of the egress router pod
                  type: string
              type: object
            type: array
        required:
        - spec
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.0
    include.release.openshift.io/ibm-cloud-managed: "true"
    include.release.openshift.io/self-managed-high-availability: "true"
  creationTimestamp: null
  name: egressrouters.network.operator.openshift.io
spec:
  group: network.operator.openshift.io
  names:
    kind: EgressRouter
    listKind: EgressRouterList
    plural: egressrouters
    singular: egressrouter
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: EgressRouter is a single egressrouter pod configuration object.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: EgressRouterSpec contains the configuration for an egress
              router.
            properties:
              interfaceArgs:
                description: Arguments specific to the interfaceType
                properties:
                  master:
                    description: Name of the master inteface. Usually used for macvlan
                      and ipvlan. Need not be specified if it can be inferred from
                      the IP address.
                    minLength: 1
                    type: string
                  mode:
                    description: Usually used for macvlan interface.
                    minLength: 1
                    type: string
                type: object
              interfaceType:
                description: Type of interface to create/use. e.g; ipvlan, macvlan
                minLength: 1
                type: string
              ip:
                description: IP configuration arguments.
                properties:
                  addresses:
                    description: List of IP addresses to configure on the interface.
                    items:
                      description: IPAddress is the address to configure on the router's
                        interface.
                      pattern: ^(([0-9]|[0-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[0-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])$
                      type: string
                    type: array
                  destinations:
                    description: List of CIDR blocks that the pod is allowed to connect
                      to via this interface. If not provided, the pod can connect
                      to any destination.
                    items:
                      description: DestinationCIDR represents the CIDR block that
                        the pod is allowed to connect to via this interface.
                      pattern: ^(([0-9]|[0-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[0-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])/([0-9]|[12][0-9]|3[0-2])$
                      type: string
                    type: array
                  gateway:
                    description: IP address of the next-hop gateway, if it cannot
                      be automatically determined.
                    pattern: ^(([0-9]|[0-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[0-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])$
                    type: string
                required:
                - addresses
                type: object
              name:
                description: The name of the network attachment definition
                minLength: 1
                type: string
              type:
                default: egress-router
                minLength: 1
                type: string
            required:
            - ip
            - name
            - type
            type: object
          status:
            items:
              description: EgressRouterStatus contains the observed status of EgressRouter.
                Read-only.
              properties:
                egressRouter:
                  description: Name of the egress router network
                  type: string
                status:
                  description: Observed status of the egress router pod
                  type: string
              type: object
            type: array
        required:
        - spec
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
